#!/bin/bash

# set up a wallet just for holding the key used during blockchain ignition

bioshost=$BIOS_HOSTNAME
if [ -z "$bioshost" ]; then
   bioshost=localhost
fi

biosport=$BIOS_HTTP_PORT
if [ -z "$biosport" ]; then
    biosport=9776
fi

bioscontractpath=$BIOS_CONTRACT_PATH
if [ -z "$bioscontractpath" ]; then
    bioscontractpath="unittests/contracts/roxe.bios"
fi

wddir=roxe-ignition-wd
wdaddr=localhost:8899
wdurl=http://$wdaddr
# Manual deployers, add a line below this block that looks like:
#    bioshost=$BIOS_HOSTNAME
#    biosport=$BIOS_HTTP_PORT
#    cnt_dir=$CONTRACT_DIR
#    sys=$SYS_CONTRACT
# where $BIOS_HOSTNAME is replaced by the hostname portion of the http-server-address configured
# for the nodroxe instance running to bios producer
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT envars

logfile=$wddir/bootlog.txt

if [ -e $wddir ]; then
    rm -rf $wddir
fi
mkdir $wddir

step=1
echo Initializing ignition sequence  at $(date) | tee $logfile

echo "FEATURE_DIGESTS: $FEATURE_DIGESTS" >> $logfile

echo "http-server-address = $wdaddr" > $wddir/config.ini

programs/kroxed/kroxed --config-dir $wddir --data-dir $wddir 2> $wddir/wdlog.txt &
echo $$ > ignition_wallet.pid
echo kroxed log in $wddir/wdlog.txt >> $logfile
sleep 1

ecmd () {
    echo ===== Start: $step ============ >> $logfile
    echo executing: clroxe --wallet-url $wdurl --url http://$bioshost:$biosport $* | tee -a $logfile
    echo ----------------------- >> $logfile
    programs/clroxe/clroxe  --wallet-url $wdurl --url http://$bioshost:$biosport $* >> $logfile 2>&1
    echo ==== End: $step ============== >> $logfile
    step=$(($step + 1))
}

wcmd () {
    ecmd wallet $*
}

cacmd () {
    programs/clroxe/clroxe  --wallet-url $wdurl --url http://$bioshost:$biosport system newaccount --transfer --stake-net "10000000.0000 ROC" --stake-cpu "10000000.0000 ROC"  --buy-ram "10000000.0000 ROC" roxe $* >> $logfile 2>&1
    ecmd system regproducer $1 $2
#    ecmd system voteproducer prods $1 $1
}

sleep 2
ecmd get info

wcmd create --to-console -n ignition

# Manual deployers, add a line below this block that looks like:
#    wcmd import -n ignition --private-key $PRODKEY[0]
#    wcmd import -n ignition --private-key $PRODKEY[1]
#    ...
#    wcmd import -n ignition --private-key $PRODKEY[20]
# where $BIOSKEY is replaced by the private key for the bios node
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT prodkeys

ecmd set contract roxe $bioscontractpath roxe.bios.wasm roxe.bios.abi

# Preactivate all digests
for digest in $FEATURE_DIGESTS;
do
ecmd push action roxe activate "{\"feature_digest\":\"$digest\"}" -p roxe
done

# Create required system accounts
ecmd create key --to-console
pubsyskey=`grep "^Public key:" $logfile | tail -1 | sed "s/^Public key://"`
prisyskey=`grep "^Private key:" $logfile | tail -1 | sed "s/^Private key://"`
echo roxe.* keys: $prisyskey $pubsyskey >> $logfile
wcmd import -n ignition --private-key $prisyskey
ecmd create account roxe roxe.bpay $pubsyskey $pubsyskey
ecmd create account roxe roxe.msig $pubsyskey $pubsyskey
ecmd create account roxe roxe.names $pubsyskey $pubsyskey
ecmd create account roxe roxe.ram $pubsyskey $pubsyskey
ecmd create account roxe roxe.ramfee $pubsyskey $pubsyskey
ecmd create account roxe roxe.saving $pubsyskey $pubsyskey
ecmd create account roxe roxe.stake $pubsyskey $pubsyskey
ecmd create account roxe roxe.token $pubsyskey $pubsyskey
ecmd create account roxe roxe.vpay $pubsyskey $pubsyskey
ecmd create account roxe roxe.wrap $pubsyskey $pubsyskey

ecmd set contract roxe.token unittests/contracts/roxe.token roxe.token.wasm roxe.token.abi
ecmd set contract roxe.msig unittests/contracts/roxe.msig roxe.msig.wasm roxe.msig.abi
ecmd set contract roxe.wrap unittests/contracts/roxe.wrap roxe.wrap.wasm roxe.wrap.abi

echo ===== Start: $step ============ >> $logfile
echo executing: clroxe --wallet-url $wdurl --url http://$bioshost:$biosport push action roxe.token create '[ "roxe", "10000000000.0000 ROC" ]' -p roxe.token | tee -a $logfile
echo executing: clroxe --wallet-url $wdurl --url http://$bioshost:$biosport push action roxe.token issue '[ "roxe", "1000000000.0000 ROC", "memo" ]' -p roxe | tee -a $logfile
echo ----------------------- >> $logfile
programs/clroxe/clroxe --wallet-url $wdurl --url http://$bioshost:$biosport push action roxe.token create '[ "roxe", "10000000000.0000 ROC" ]' -p roxe.token >> $logfile 2>&1
programs/clroxe/clroxe --wallet-url $wdurl --url http://$bioshost:$biosport push action roxe.token issue '[ "roxe", "1000000000.0000 ROC", "memo" ]' -p roxe >> $logfile 2>&1
echo ==== End: $step ============== >> $logfile
step=$(($step + 1))

ecmd set contract roxe unittests/contracts/roxe.system roxe.system.wasm roxe.system.abi
programs/clroxe/clroxe --wallet-url $wdurl --url http://$bioshost:$biosport push action roxe init '[0, "4,ROC"]' -p roxe >> $logfile 2>&1

# Manual deployers, add a series of lines below this block that looks like:
#    cacmd $PRODNAME[0] $OWNERKEY[0] $ACTIVEKEY[0]
#    cacmd $PRODNAME[1] $OWNERKEY[1] $ACTiVEKEY[1]
#    ...
#    cacmd $PRODNAME[20] $OWNERKEY[20] $ACTIVEKEY[20]
# where $PRODNAME is the producer account name and $OWNERKEY and $ACTIVEKEY are both the producer's
# public key
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT cacmd

pkill -15 kroxed
